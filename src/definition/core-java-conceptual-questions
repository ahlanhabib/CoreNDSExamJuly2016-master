Please answer the below core-java Questions:


What jdk contains or composed of and define each components?
Ans: Java Development Kit is software to write the program.
     [Includes: javac, Java Interpreter, Java Disassembler, java doc, debugger, JVM]

Definitions:
     Java Compiler - converts source code into java bytecode
     Java Interpreter - interprets class file generated by compiler
     Java Disassembler - disassembles class file
     Java Documentation - creates documentation from source code comment
     Java Debugger - tests and debug java program
     Java Virtual Machine - JVM runs the byte codes, any device has JVM can run the byte code.

What is IDE?
Ans: Integrated Development Environment.

What are the IDEs available in the market to support java?
Ans: intellij
     Eclipse
     netBeans

Explain the entire java life cycle.
Ans: Edit > Source code (.java) > Java compiler (javac) > Bytecodes (.Class) > JVM > run

what is class?
Ans: A class is a blueprint for an object

What is object?
Ans: A class is a blueprint for an object

What is the entry point of an application?
Ans: The "main" method is the entry point of an application in java

Why main is static?
Ans: The main method is static because it can be initiated without creating an instance of it

What is the difference between an Interface and Abstract class?
Ans: In interface class, you can't implement any method but in abstract class you are allowed
     to implement non-abstract methods.
     also you can implements multiple times but you can extends only once.

Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
Ans: Java don’t allow to make an Object from an Interface but it allow us to create object
     from an Abstract class , so we have to implement the abstract method from interface in the
     Abstract class to use it. However those object always refer to the concrete class where the
     Abstract class has been extended.

what is Access Specifier?
Ans: (public, private, protected or default)

For Classes: For classes we can only use public or default/package modifier.
     1. Public will give you access for all the packages
     2. Default/package Modifier will give you access only in the package

For Variables: For variables you can use public, private, protected or default.
     1. Default: no modifier needed, visible to the package only
     2. Public: Visible to world
     3. Protected: Visible to the package and subclasses.
     4. Private: Visible to the class only (Most restrictive).

For Methods: For variables you can use public, private, protected or default.
     1. Default: no modifier needed, visible to the package only
     2. Public: Visible to world
     3. Protected: Visible to the package and subclasses.
     4. Private: Visible to the class only (Most restrictive).

What is OOP ? Define each feature of java OOP.
Ans: OOp is, Object Oriented Program.

1) Abstraction: Implementation hiding
                “implements”                “extends”
     Interface------------>Abstract class------------>Concrete class
     Restaurant---------->BangaliRestaurant------------->Pordesh

  Abstract Class:
     -In Abstract Class we can have concrete methods (methods with body)
     -We are not allowed to create object of Abstract class.
     -An abstract method is same as interface method, no implementation.

  Interface Class:
     -We have to “implements” interface class to another class.
     -We can “implements” multiple interface in one class.
     -Interface method are same as abstract method, no implementation.

2) Encapsulation: Data hiding.
     Private variables, getter and setter method for the constructors.

3) Inheritance: Process of getting properties from another class.
     GrandFather()--------> Father()----------->Children()

4) Polymorphism: The ability of an object to take on many forms.
     Two Kind of polymorphism:
     Method Overloading ----> it happens in compile time Method Overriding ----> it happens in run time.

What is API? Name list of API that you have used so far.
Ans: Java application programming interface (API) is a list of all classes that are part of the
     Java development kit (JDK). It includes all Java packages, classes, and interfaces,
     along with their methods, fields, and constructors.

     Example: Map, ArrayList, Scanner, Random etc.

Does java support multiple inheritance?
Ans: No, you can extends only once in a class.
     However it supports multiple inheritance in case of Interface.
     we can use that to achieve multiple inheritance in Java.

What is method overloading and when it happens?
Ans: Method Overloading is a feature that allows a class to have two or more methods having
     same name, if their argument lists are different.
     Overloading happens at compile-time

What is method overriding and when it happens?
Ans: Declaring a method name in subclass which is already present in parent class is known
     as method overriding because of their same name.
     Method Overriding happens in run time.
     Explain exceptions in java and how to handle it.

Ans: An exception is an event that occurs during the execution of a program that disrupts
     the normal flow of instruction.
     We can use built-in try/catch block to find the exception and find the error message.

What is static keyword in java? How it has been used in variables and methods ?
Ans: Static gives you access to the method or variable without creating an object.

What is final and how it has been used variables and methods?
Ans: final in variable: You must initialize the value right away. It becomes a constant
     and no one can change the value of it.

     final in method: For method final means you can’t change the logic from the child class.

What is final, finally and finalize?
Ans: final in variable: You must initialize the value right away. It becomes a constant
     and no one can change the value of it.

     final in method: For method final means you can’t change the logic from the child class.
     finally: for try catch Exception part.
     finalize: to destroy object we use finalize.

What is a constructor ?
Ans: The purpose of constructor is to initialize or set an object.
     Constructor has same name as the class.
     Constructor has not return type.
     A class can have multiple constructor with different parameters.

What is "this" keyword in java ?
Ans: This operator is Used inside the method of the same class to invoke variables that are defined outside of the method.
     this.[variable name]

What is "super" keyword in java?
Ans: For Constructors: Super keywords is to invoke constructor from immediate super class.

     For Variables: Super keywords is to invoke variable from immediate super class.

     For Methods: Super keywords is to invoke method from immediate super class.

What is JVM stand for ?
Ans: Java Virtual Machine.

What version of java are you using?
Ans: Java version "1.8.0_91".

What is JAR stand for ?
Ans: Java Archive

What is compile time and run time?
Ans: The source code is compiled into machine code or byte code in order to become an executable program.
     This compilation process is known as compile time.

     Run time is when the executable is run by a user.

What is heap?
Ans: Heap is where objects are loaded in RAM

How java manage it's memory?
Ans: Java has a garbage collector that automatically kills object that is not being used

What is the difference between String, StringBuffer and StringBuilder?
Ans: The String object is immutable in Java but StringBuffer and StringBuilder are mutable objects.
